     1                                  ; FIND which finds the larger of two signed bytes. Assuming the two bytes are in memory 0x150 and 0x151, store the larger of two in 152
     2                                  ; Renat Norderhaug
     3                                  ;  Does it store the least significant bits first?
     4                                  ;
     5                                  org 100h
     6                                  section .text
     7                                  ; beginning address of code = 0x0100
     8                                  ;*******************************************************
     9                                  ;
    10                                  ; put your code here
    11                                  ;
    12                                  start:
    13                                  
    14 00000000 BE5001                  mov si,0x150 ; location 150
    15 00000003 8A04                    mov al,[si] ; moves Number1 into al
    16 00000005 8A6401                  mov ah,[si+0x1] ; moves Number2 into ah
    17 00000008 38C4                    cmp ah, al ; subtracts ah and al without setting any flag
    18 0000000A 7F03                    jg move1  ; jump if ah is greater than or equal to al
    19 0000000C 884402                  mov [si + 0x2], al ; mov al into 152 if it is not greater than ah
    20                                  
    21                                  move1:   ; if ah is greater than al
    22 0000000F 886402                   mov [si+0x2], ah
    23                                  
    24                                  
    25                                  ; end of your code
    26                                  ;
    27                                  ;*******************************************************
    28 00000012 EBFE                    ILP:	JMP	ILP				;infinite loop
    29                                  ;
    30 00000014 00<rept>                TIMES 50H -($-$$) DB 0
    31                                  section .data
    32                                  ; beginning address of data = 0x0150
    33                                  ;*******************************************************
    34                                  ;
    35                                  ; put your data items here
    36                                  ;
    37 00000000 91BD                    Number1 DW 10010001  ; stored between memory locations 150
    38 00000002 6B5F                    Number2 DW 11100011  ; stored in memory location 151
    39                                  
    40                                  ; DB for up to 8 bits, DW for up to 16 bits, DD for up to 32 bits, DQ for up to 64 bits
    41                                  
    42                                  
    43                                  ;
    44                                  ; end of your data
    45                                  ;
    46                                  ;*******************************************************
